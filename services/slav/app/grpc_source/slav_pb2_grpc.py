# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import slav_pb2 as slav__pb2


class SlavStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateContainer = channel.unary_unary(
                '/slav.Slav/CreateContainer',
                request_serializer=slav__pb2.CreateContainerRequest.SerializeToString,
                response_deserializer=slav__pb2.CreateContainerReply.FromString,
                )
        self.UpdateContainer = channel.unary_unary(
                '/slav.Slav/UpdateContainer',
                request_serializer=slav__pb2.UpdateContainerRequest.SerializeToString,
                response_deserializer=slav__pb2.UpdateContainerReply.FromString,
                )
        self.GetContainer = channel.unary_unary(
                '/slav.Slav/GetContainer',
                request_serializer=slav__pb2.GetContainerRequest.SerializeToString,
                response_deserializer=slav__pb2.GetContainerReply.FromString,
                )
        self.DeleteContainer = channel.unary_unary(
                '/slav.Slav/DeleteContainer',
                request_serializer=slav__pb2.DeleteContainerRequest.SerializeToString,
                response_deserializer=slav__pb2.DeleteContainerReply.FromString,
                )
        self.ListContainers = channel.unary_unary(
                '/slav.Slav/ListContainers',
                request_serializer=slav__pb2.ListContainersRequest.SerializeToString,
                response_deserializer=slav__pb2.ListContainersReply.FromString,
                )


class SlavServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateContainer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateContainer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetContainer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteContainer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListContainers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SlavServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateContainer': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateContainer,
                    request_deserializer=slav__pb2.CreateContainerRequest.FromString,
                    response_serializer=slav__pb2.CreateContainerReply.SerializeToString,
            ),
            'UpdateContainer': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateContainer,
                    request_deserializer=slav__pb2.UpdateContainerRequest.FromString,
                    response_serializer=slav__pb2.UpdateContainerReply.SerializeToString,
            ),
            'GetContainer': grpc.unary_unary_rpc_method_handler(
                    servicer.GetContainer,
                    request_deserializer=slav__pb2.GetContainerRequest.FromString,
                    response_serializer=slav__pb2.GetContainerReply.SerializeToString,
            ),
            'DeleteContainer': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteContainer,
                    request_deserializer=slav__pb2.DeleteContainerRequest.FromString,
                    response_serializer=slav__pb2.DeleteContainerReply.SerializeToString,
            ),
            'ListContainers': grpc.unary_unary_rpc_method_handler(
                    servicer.ListContainers,
                    request_deserializer=slav__pb2.ListContainersRequest.FromString,
                    response_serializer=slav__pb2.ListContainersReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'slav.Slav', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Slav(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateContainer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/slav.Slav/CreateContainer',
            slav__pb2.CreateContainerRequest.SerializeToString,
            slav__pb2.CreateContainerReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateContainer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/slav.Slav/UpdateContainer',
            slav__pb2.UpdateContainerRequest.SerializeToString,
            slav__pb2.UpdateContainerReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetContainer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/slav.Slav/GetContainer',
            slav__pb2.GetContainerRequest.SerializeToString,
            slav__pb2.GetContainerReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteContainer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/slav.Slav/DeleteContainer',
            slav__pb2.DeleteContainerRequest.SerializeToString,
            slav__pb2.DeleteContainerReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListContainers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/slav.Slav/ListContainers',
            slav__pb2.ListContainersRequest.SerializeToString,
            slav__pb2.ListContainersReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
