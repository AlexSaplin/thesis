# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import gorilla_pb2 as gorilla__pb2


class GorillaStub(object):
    """The Gorilla service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddDeltas = channel.unary_unary(
                '/gorilla.Gorilla/AddDeltas',
                request_serializer=gorilla__pb2.AddDeltasRequest.SerializeToString,
                response_deserializer=gorilla__pb2.AddDeltasResponse.FromString,
                )
        self.GetDeltas = channel.unary_unary(
                '/gorilla.Gorilla/GetDeltas',
                request_serializer=gorilla__pb2.GetDeltasRequest.SerializeToString,
                response_deserializer=gorilla__pb2.GetDeltasResponse.FromString,
                )
        self.GetBalance = channel.unary_unary(
                '/gorilla.Gorilla/GetBalance',
                request_serializer=gorilla__pb2.GetBalanceRequest.SerializeToString,
                response_deserializer=gorilla__pb2.GetBalanceResponse.FromString,
                )


class GorillaServicer(object):
    """The Gorilla service definition.
    """

    def AddDeltas(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDeltas(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBalance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GorillaServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddDeltas': grpc.unary_unary_rpc_method_handler(
                    servicer.AddDeltas,
                    request_deserializer=gorilla__pb2.AddDeltasRequest.FromString,
                    response_serializer=gorilla__pb2.AddDeltasResponse.SerializeToString,
            ),
            'GetDeltas': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDeltas,
                    request_deserializer=gorilla__pb2.GetDeltasRequest.FromString,
                    response_serializer=gorilla__pb2.GetDeltasResponse.SerializeToString,
            ),
            'GetBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBalance,
                    request_deserializer=gorilla__pb2.GetBalanceRequest.FromString,
                    response_serializer=gorilla__pb2.GetBalanceResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'gorilla.Gorilla', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Gorilla(object):
    """The Gorilla service definition.
    """

    @staticmethod
    def AddDeltas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gorilla.Gorilla/AddDeltas',
            gorilla__pb2.AddDeltasRequest.SerializeToString,
            gorilla__pb2.AddDeltasResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDeltas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gorilla.Gorilla/GetDeltas',
            gorilla__pb2.GetDeltasRequest.SerializeToString,
            gorilla__pb2.GetDeltasResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gorilla.Gorilla/GetBalance',
            gorilla__pb2.GetBalanceRequest.SerializeToString,
            gorilla__pb2.GetBalanceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
