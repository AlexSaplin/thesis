// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: slav.proto

package slav

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InstanceType int32

const (
	InstanceType_STARTER   InstanceType = 0
	InstanceType_INFERENCE InstanceType = 1
)

// Enum value maps for InstanceType.
var (
	InstanceType_name = map[int32]string{
		0: "STARTER",
		1: "INFERENCE",
	}
	InstanceType_value = map[string]int32{
		"STARTER":   0,
		"INFERENCE": 1,
	}
)

func (x InstanceType) Enum() *InstanceType {
	p := new(InstanceType)
	*p = x
	return p
}

func (x InstanceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InstanceType) Descriptor() protoreflect.EnumDescriptor {
	return file_slav_proto_enumTypes[0].Descriptor()
}

func (InstanceType) Type() protoreflect.EnumType {
	return &file_slav_proto_enumTypes[0]
}

func (x InstanceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InstanceType.Descriptor instead.
func (InstanceType) EnumDescriptor() ([]byte, []int) {
	return file_slav_proto_rawDescGZIP(), []int{0}
}

type StateType int32

const (
	StateType_RUNNING  StateType = 0
	StateType_UPDATING StateType = 1
	StateType_ERROR    StateType = 2
	StateType_UNKNOWN  StateType = 3
)

// Enum value maps for StateType.
var (
	StateType_name = map[int32]string{
		0: "RUNNING",
		1: "UPDATING",
		2: "ERROR",
		3: "UNKNOWN",
	}
	StateType_value = map[string]int32{
		"RUNNING":  0,
		"UPDATING": 1,
		"ERROR":    2,
		"UNKNOWN":  3,
	}
)

func (x StateType) Enum() *StateType {
	p := new(StateType)
	*p = x
	return p
}

func (x StateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StateType) Descriptor() protoreflect.EnumDescriptor {
	return file_slav_proto_enumTypes[1].Descriptor()
}

func (StateType) Type() protoreflect.EnumType {
	return &file_slav_proto_enumTypes[1]
}

func (x StateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StateType.Descriptor instead.
func (StateType) EnumDescriptor() ([]byte, []int) {
	return file_slav_proto_rawDescGZIP(), []int{1}
}

type KV struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *KV) Reset() {
	*x = KV{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slav_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KV) ProtoMessage() {}

func (x *KV) ProtoReflect() protoreflect.Message {
	mi := &file_slav_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KV.ProtoReflect.Descriptor instead.
func (*KV) Descriptor() ([]byte, []int) {
	return file_slav_proto_rawDescGZIP(), []int{0}
}

func (x *KV) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KV) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type AuthItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=Username,proto3" json:"Username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
	Registry string `protobuf:"bytes,3,opt,name=Registry,proto3" json:"Registry,omitempty"`
}

func (x *AuthItem) Reset() {
	*x = AuthItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slav_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthItem) ProtoMessage() {}

func (x *AuthItem) ProtoReflect() protoreflect.Message {
	mi := &file_slav_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthItem.ProtoReflect.Descriptor instead.
func (*AuthItem) Descriptor() ([]byte, []int) {
	return file_slav_proto_rawDescGZIP(), []int{1}
}

func (x *AuthItem) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AuthItem) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AuthItem) GetRegistry() string {
	if x != nil {
		return x.Registry
	}
	return ""
}

type Container struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string       `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Scale    uint32       `protobuf:"varint,2,opt,name=Scale,proto3" json:"Scale,omitempty"`
	Instance InstanceType `protobuf:"varint,3,opt,name=Instance,proto3,enum=slav.InstanceType" json:"Instance,omitempty"`
	Image    string       `protobuf:"bytes,4,opt,name=Image,proto3" json:"Image,omitempty"`
	Port     uint32       `protobuf:"varint,5,opt,name=Port,proto3" json:"Port,omitempty"`
	URL      string       `protobuf:"bytes,6,opt,name=URL,proto3" json:"URL,omitempty"`
	Env      []*KV        `protobuf:"bytes,7,rep,name=Env,proto3" json:"Env,omitempty"`
	Auth     []string     `protobuf:"bytes,8,rep,name=Auth,proto3" json:"Auth,omitempty"`
}

func (x *Container) Reset() {
	*x = Container{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slav_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Container) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Container) ProtoMessage() {}

func (x *Container) ProtoReflect() protoreflect.Message {
	mi := &file_slav_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Container.ProtoReflect.Descriptor instead.
func (*Container) Descriptor() ([]byte, []int) {
	return file_slav_proto_rawDescGZIP(), []int{2}
}

func (x *Container) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Container) GetScale() uint32 {
	if x != nil {
		return x.Scale
	}
	return 0
}

func (x *Container) GetInstance() InstanceType {
	if x != nil {
		return x.Instance
	}
	return InstanceType_STARTER
}

func (x *Container) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Container) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Container) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *Container) GetEnv() []*KV {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *Container) GetAuth() []string {
	if x != nil {
		return x.Auth
	}
	return nil
}

type CreateContainerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerID  string       `protobuf:"bytes,1,opt,name=OwnerID,proto3" json:"OwnerID,omitempty"`
	Name     string       `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Scale    uint32       `protobuf:"varint,3,opt,name=Scale,proto3" json:"Scale,omitempty"`
	Instance InstanceType `protobuf:"varint,4,opt,name=Instance,proto3,enum=slav.InstanceType" json:"Instance,omitempty"`
	Image    string       `protobuf:"bytes,5,opt,name=Image,proto3" json:"Image,omitempty"`
	Port     uint32       `protobuf:"varint,6,opt,name=Port,proto3" json:"Port,omitempty"`
	Env      []*KV        `protobuf:"bytes,7,rep,name=Env,proto3" json:"Env,omitempty"`
	Auth     []*AuthItem  `protobuf:"bytes,8,rep,name=Auth,proto3" json:"Auth,omitempty"`
}

func (x *CreateContainerRequest) Reset() {
	*x = CreateContainerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slav_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContainerRequest) ProtoMessage() {}

func (x *CreateContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_slav_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContainerRequest.ProtoReflect.Descriptor instead.
func (*CreateContainerRequest) Descriptor() ([]byte, []int) {
	return file_slav_proto_rawDescGZIP(), []int{3}
}

func (x *CreateContainerRequest) GetOwnerID() string {
	if x != nil {
		return x.OwnerID
	}
	return ""
}

func (x *CreateContainerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateContainerRequest) GetScale() uint32 {
	if x != nil {
		return x.Scale
	}
	return 0
}

func (x *CreateContainerRequest) GetInstance() InstanceType {
	if x != nil {
		return x.Instance
	}
	return InstanceType_STARTER
}

func (x *CreateContainerRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *CreateContainerRequest) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *CreateContainerRequest) GetEnv() []*KV {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *CreateContainerRequest) GetAuth() []*AuthItem {
	if x != nil {
		return x.Auth
	}
	return nil
}

type CreateContainerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Container *Container `protobuf:"bytes,1,opt,name=Container,proto3" json:"Container,omitempty"`
	Error     string     `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *CreateContainerReply) Reset() {
	*x = CreateContainerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slav_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateContainerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContainerReply) ProtoMessage() {}

func (x *CreateContainerReply) ProtoReflect() protoreflect.Message {
	mi := &file_slav_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContainerReply.ProtoReflect.Descriptor instead.
func (*CreateContainerReply) Descriptor() ([]byte, []int) {
	return file_slav_proto_rawDescGZIP(), []int{4}
}

func (x *CreateContainerReply) GetContainer() *Container {
	if x != nil {
		return x.Container
	}
	return nil
}

func (x *CreateContainerReply) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type NullString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value   string `protobuf:"bytes,1,opt,name=Value,proto3" json:"Value,omitempty"`
	IsValid bool   `protobuf:"varint,2,opt,name=IsValid,proto3" json:"IsValid,omitempty"`
}

func (x *NullString) Reset() {
	*x = NullString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slav_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NullString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NullString) ProtoMessage() {}

func (x *NullString) ProtoReflect() protoreflect.Message {
	mi := &file_slav_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NullString.ProtoReflect.Descriptor instead.
func (*NullString) Descriptor() ([]byte, []int) {
	return file_slav_proto_rawDescGZIP(), []int{5}
}

func (x *NullString) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *NullString) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

type NullUInt32 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value   uint32 `protobuf:"varint,1,opt,name=Value,proto3" json:"Value,omitempty"`
	IsValid bool   `protobuf:"varint,2,opt,name=IsValid,proto3" json:"IsValid,omitempty"`
}

func (x *NullUInt32) Reset() {
	*x = NullUInt32{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slav_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NullUInt32) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NullUInt32) ProtoMessage() {}

func (x *NullUInt32) ProtoReflect() protoreflect.Message {
	mi := &file_slav_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NullUInt32.ProtoReflect.Descriptor instead.
func (*NullUInt32) Descriptor() ([]byte, []int) {
	return file_slav_proto_rawDescGZIP(), []int{6}
}

func (x *NullUInt32) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *NullUInt32) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

type NullInstanceType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value   InstanceType `protobuf:"varint,1,opt,name=Value,proto3,enum=slav.InstanceType" json:"Value,omitempty"`
	IsValid bool         `protobuf:"varint,2,opt,name=IsValid,proto3" json:"IsValid,omitempty"`
}

func (x *NullInstanceType) Reset() {
	*x = NullInstanceType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slav_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NullInstanceType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NullInstanceType) ProtoMessage() {}

func (x *NullInstanceType) ProtoReflect() protoreflect.Message {
	mi := &file_slav_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NullInstanceType.ProtoReflect.Descriptor instead.
func (*NullInstanceType) Descriptor() ([]byte, []int) {
	return file_slav_proto_rawDescGZIP(), []int{7}
}

func (x *NullInstanceType) GetValue() InstanceType {
	if x != nil {
		return x.Value
	}
	return InstanceType_STARTER
}

func (x *NullInstanceType) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

type UpdateContainerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string            `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	OwnerID  string            `protobuf:"bytes,2,opt,name=OwnerID,proto3" json:"OwnerID,omitempty"`
	Scale    *NullUInt32       `protobuf:"bytes,3,opt,name=Scale,proto3" json:"Scale,omitempty"`
	Instance *NullInstanceType `protobuf:"bytes,4,opt,name=Instance,proto3" json:"Instance,omitempty"`
	Image    *NullString       `protobuf:"bytes,5,opt,name=Image,proto3" json:"Image,omitempty"`
}

func (x *UpdateContainerRequest) Reset() {
	*x = UpdateContainerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slav_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateContainerRequest) ProtoMessage() {}

func (x *UpdateContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_slav_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateContainerRequest.ProtoReflect.Descriptor instead.
func (*UpdateContainerRequest) Descriptor() ([]byte, []int) {
	return file_slav_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateContainerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateContainerRequest) GetOwnerID() string {
	if x != nil {
		return x.OwnerID
	}
	return ""
}

func (x *UpdateContainerRequest) GetScale() *NullUInt32 {
	if x != nil {
		return x.Scale
	}
	return nil
}

func (x *UpdateContainerRequest) GetInstance() *NullInstanceType {
	if x != nil {
		return x.Instance
	}
	return nil
}

func (x *UpdateContainerRequest) GetImage() *NullString {
	if x != nil {
		return x.Image
	}
	return nil
}

type UpdateContainerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Container *Container `protobuf:"bytes,1,opt,name=Container,proto3" json:"Container,omitempty"`
}

func (x *UpdateContainerReply) Reset() {
	*x = UpdateContainerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slav_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateContainerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateContainerReply) ProtoMessage() {}

func (x *UpdateContainerReply) ProtoReflect() protoreflect.Message {
	mi := &file_slav_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateContainerReply.ProtoReflect.Descriptor instead.
func (*UpdateContainerReply) Descriptor() ([]byte, []int) {
	return file_slav_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateContainerReply) GetContainer() *Container {
	if x != nil {
		return x.Container
	}
	return nil
}

type GetContainerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	OwnerID string `protobuf:"bytes,2,opt,name=OwnerID,proto3" json:"OwnerID,omitempty"`
}

func (x *GetContainerRequest) Reset() {
	*x = GetContainerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slav_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainerRequest) ProtoMessage() {}

func (x *GetContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_slav_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainerRequest.ProtoReflect.Descriptor instead.
func (*GetContainerRequest) Descriptor() ([]byte, []int) {
	return file_slav_proto_rawDescGZIP(), []int{10}
}

func (x *GetContainerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetContainerRequest) GetOwnerID() string {
	if x != nil {
		return x.OwnerID
	}
	return ""
}

type GetContainerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Container *Container `protobuf:"bytes,1,opt,name=Container,proto3" json:"Container,omitempty"`
	State     StateType  `protobuf:"varint,2,opt,name=State,proto3,enum=slav.StateType" json:"State,omitempty"`
	Error     string     `protobuf:"bytes,3,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *GetContainerReply) Reset() {
	*x = GetContainerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slav_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContainerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainerReply) ProtoMessage() {}

func (x *GetContainerReply) ProtoReflect() protoreflect.Message {
	mi := &file_slav_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainerReply.ProtoReflect.Descriptor instead.
func (*GetContainerReply) Descriptor() ([]byte, []int) {
	return file_slav_proto_rawDescGZIP(), []int{11}
}

func (x *GetContainerReply) GetContainer() *Container {
	if x != nil {
		return x.Container
	}
	return nil
}

func (x *GetContainerReply) GetState() StateType {
	if x != nil {
		return x.State
	}
	return StateType_RUNNING
}

func (x *GetContainerReply) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type DeleteContainerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	OwnerID string `protobuf:"bytes,2,opt,name=OwnerID,proto3" json:"OwnerID,omitempty"`
}

func (x *DeleteContainerRequest) Reset() {
	*x = DeleteContainerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slav_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteContainerRequest) ProtoMessage() {}

func (x *DeleteContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_slav_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteContainerRequest.ProtoReflect.Descriptor instead.
func (*DeleteContainerRequest) Descriptor() ([]byte, []int) {
	return file_slav_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteContainerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeleteContainerRequest) GetOwnerID() string {
	if x != nil {
		return x.OwnerID
	}
	return ""
}

type DeleteContainerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteContainerReply) Reset() {
	*x = DeleteContainerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slav_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteContainerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteContainerReply) ProtoMessage() {}

func (x *DeleteContainerReply) ProtoReflect() protoreflect.Message {
	mi := &file_slav_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteContainerReply.ProtoReflect.Descriptor instead.
func (*DeleteContainerReply) Descriptor() ([]byte, []int) {
	return file_slav_proto_rawDescGZIP(), []int{13}
}

type ListContainersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerID string `protobuf:"bytes,1,opt,name=OwnerID,proto3" json:"OwnerID,omitempty"`
}

func (x *ListContainersRequest) Reset() {
	*x = ListContainersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slav_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListContainersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContainersRequest) ProtoMessage() {}

func (x *ListContainersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_slav_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContainersRequest.ProtoReflect.Descriptor instead.
func (*ListContainersRequest) Descriptor() ([]byte, []int) {
	return file_slav_proto_rawDescGZIP(), []int{14}
}

func (x *ListContainersRequest) GetOwnerID() string {
	if x != nil {
		return x.OwnerID
	}
	return ""
}

type ListContainersReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Containers []*Container `protobuf:"bytes,1,rep,name=Containers,proto3" json:"Containers,omitempty"`
}

func (x *ListContainersReply) Reset() {
	*x = ListContainersReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_slav_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListContainersReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContainersReply) ProtoMessage() {}

func (x *ListContainersReply) ProtoReflect() protoreflect.Message {
	mi := &file_slav_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContainersReply.ProtoReflect.Descriptor instead.
func (*ListContainersReply) Descriptor() ([]byte, []int) {
	return file_slav_proto_rawDescGZIP(), []int{15}
}

func (x *ListContainersReply) GetContainers() []*Container {
	if x != nil {
		return x.Containers
	}
	return nil
}

var File_slav_proto protoreflect.FileDescriptor

var file_slav_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x73, 0x6c, 0x61, 0x76, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x73, 0x6c,
	0x61, 0x76, 0x22, 0x2c, 0x0a, 0x02, 0x4b, 0x56, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x5e, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1a, 0x0a, 0x08,
	0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x22, 0xd1, 0x01, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x73, 0x6c, 0x61,
	0x76, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x50, 0x6f,
	0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x55, 0x52, 0x4c, 0x12, 0x1a, 0x0a, 0x03, 0x45, 0x6e, 0x76, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x73, 0x6c, 0x61, 0x76, 0x2e, 0x4b, 0x56, 0x52, 0x03, 0x45, 0x6e, 0x76,
	0x12, 0x12, 0x0a, 0x04, 0x41, 0x75, 0x74, 0x68, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x41, 0x75, 0x74, 0x68, 0x22, 0xf6, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x53, 0x63,
	0x61, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x73, 0x6c, 0x61, 0x76, 0x2e, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x72,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a,
	0x03, 0x45, 0x6e, 0x76, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x73, 0x6c, 0x61,
	0x76, 0x2e, 0x4b, 0x56, 0x52, 0x03, 0x45, 0x6e, 0x76, 0x12, 0x22, 0x0a, 0x04, 0x41, 0x75, 0x74,
	0x68, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x6c, 0x61, 0x76, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x41, 0x75, 0x74, 0x68, 0x22, 0x5b, 0x0a,
	0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2d, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x6c, 0x61, 0x76, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x3c, 0x0a, 0x0a, 0x4e, 0x75,
	0x6c, 0x6c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x49, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x49, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x22, 0x3c, 0x0a, 0x0a, 0x4e, 0x75, 0x6c, 0x6c,
	0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x49, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x49,
	0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x22, 0x56, 0x0a, 0x10, 0x4e, 0x75, 0x6c, 0x6c, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x73, 0x6c, 0x61, 0x76,
	0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x49, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x22, 0xca,
	0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x05, 0x53, 0x63, 0x61, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x6c, 0x61, 0x76, 0x2e, 0x4e, 0x75,
	0x6c, 0x6c, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x52, 0x05, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x12,
	0x32, 0x0a, 0x08, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x73, 0x6c, 0x61, 0x76, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x6c, 0x61, 0x76, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x45, 0x0a, 0x14, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x2d, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x6c, 0x61, 0x76, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x22, 0x43, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x22, 0x7f, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2d, 0x0a, 0x09,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x73, 0x6c, 0x61, 0x76, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x52, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x05, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x73, 0x6c, 0x61,
	0x76, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x46, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44,
	0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x31, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x22, 0x46, 0x0a, 0x13, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x6c, 0x61, 0x76, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x73, 0x2a, 0x2a, 0x0a, 0x0c, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x52, 0x10, 0x00,
	0x12, 0x0d, 0x0a, 0x09, 0x49, 0x4e, 0x46, 0x45, 0x52, 0x45, 0x4e, 0x43, 0x45, 0x10, 0x01, 0x2a,
	0x3e, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07,
	0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x50, 0x44,
	0x41, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x03, 0x32,
	0xfb, 0x02, 0x0a, 0x04, 0x53, 0x6c, 0x61, 0x76, 0x12, 0x4b, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x73, 0x6c,
	0x61, 0x76, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x6c, 0x61, 0x76,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4b, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x73, 0x6c, 0x61, 0x76, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x6c, 0x61, 0x76, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x42, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x12, 0x19, 0x2e, 0x73, 0x6c, 0x61, 0x76, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x73, 0x6c, 0x61, 0x76, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4b, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x73, 0x6c, 0x61, 0x76,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x6c, 0x61, 0x76, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x48, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x2e, 0x73, 0x6c, 0x61, 0x76, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x6c, 0x61, 0x76, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_slav_proto_rawDescOnce sync.Once
	file_slav_proto_rawDescData = file_slav_proto_rawDesc
)

func file_slav_proto_rawDescGZIP() []byte {
	file_slav_proto_rawDescOnce.Do(func() {
		file_slav_proto_rawDescData = protoimpl.X.CompressGZIP(file_slav_proto_rawDescData)
	})
	return file_slav_proto_rawDescData
}

var file_slav_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_slav_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_slav_proto_goTypes = []interface{}{
	(InstanceType)(0),              // 0: slav.InstanceType
	(StateType)(0),                 // 1: slav.StateType
	(*KV)(nil),                     // 2: slav.KV
	(*AuthItem)(nil),               // 3: slav.AuthItem
	(*Container)(nil),              // 4: slav.Container
	(*CreateContainerRequest)(nil), // 5: slav.CreateContainerRequest
	(*CreateContainerReply)(nil),   // 6: slav.CreateContainerReply
	(*NullString)(nil),             // 7: slav.NullString
	(*NullUInt32)(nil),             // 8: slav.NullUInt32
	(*NullInstanceType)(nil),       // 9: slav.NullInstanceType
	(*UpdateContainerRequest)(nil), // 10: slav.UpdateContainerRequest
	(*UpdateContainerReply)(nil),   // 11: slav.UpdateContainerReply
	(*GetContainerRequest)(nil),    // 12: slav.GetContainerRequest
	(*GetContainerReply)(nil),      // 13: slav.GetContainerReply
	(*DeleteContainerRequest)(nil), // 14: slav.DeleteContainerRequest
	(*DeleteContainerReply)(nil),   // 15: slav.DeleteContainerReply
	(*ListContainersRequest)(nil),  // 16: slav.ListContainersRequest
	(*ListContainersReply)(nil),    // 17: slav.ListContainersReply
}
var file_slav_proto_depIdxs = []int32{
	0,  // 0: slav.Container.Instance:type_name -> slav.InstanceType
	2,  // 1: slav.Container.Env:type_name -> slav.KV
	0,  // 2: slav.CreateContainerRequest.Instance:type_name -> slav.InstanceType
	2,  // 3: slav.CreateContainerRequest.Env:type_name -> slav.KV
	3,  // 4: slav.CreateContainerRequest.Auth:type_name -> slav.AuthItem
	4,  // 5: slav.CreateContainerReply.Container:type_name -> slav.Container
	0,  // 6: slav.NullInstanceType.Value:type_name -> slav.InstanceType
	8,  // 7: slav.UpdateContainerRequest.Scale:type_name -> slav.NullUInt32
	9,  // 8: slav.UpdateContainerRequest.Instance:type_name -> slav.NullInstanceType
	7,  // 9: slav.UpdateContainerRequest.Image:type_name -> slav.NullString
	4,  // 10: slav.UpdateContainerReply.Container:type_name -> slav.Container
	4,  // 11: slav.GetContainerReply.Container:type_name -> slav.Container
	1,  // 12: slav.GetContainerReply.State:type_name -> slav.StateType
	4,  // 13: slav.ListContainersReply.Containers:type_name -> slav.Container
	5,  // 14: slav.Slav.CreateContainer:input_type -> slav.CreateContainerRequest
	10, // 15: slav.Slav.UpdateContainer:input_type -> slav.UpdateContainerRequest
	12, // 16: slav.Slav.GetContainer:input_type -> slav.GetContainerRequest
	14, // 17: slav.Slav.DeleteContainer:input_type -> slav.DeleteContainerRequest
	16, // 18: slav.Slav.ListContainers:input_type -> slav.ListContainersRequest
	6,  // 19: slav.Slav.CreateContainer:output_type -> slav.CreateContainerReply
	11, // 20: slav.Slav.UpdateContainer:output_type -> slav.UpdateContainerReply
	13, // 21: slav.Slav.GetContainer:output_type -> slav.GetContainerReply
	15, // 22: slav.Slav.DeleteContainer:output_type -> slav.DeleteContainerReply
	17, // 23: slav.Slav.ListContainers:output_type -> slav.ListContainersReply
	19, // [19:24] is the sub-list for method output_type
	14, // [14:19] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_slav_proto_init() }
func file_slav_proto_init() {
	if File_slav_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_slav_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KV); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slav_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slav_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Container); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slav_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateContainerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slav_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateContainerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slav_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NullString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slav_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NullUInt32); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slav_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NullInstanceType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slav_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateContainerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slav_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateContainerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slav_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContainerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slav_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContainerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slav_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteContainerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slav_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteContainerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slav_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListContainersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_slav_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListContainersReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_slav_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_slav_proto_goTypes,
		DependencyIndexes: file_slav_proto_depIdxs,
		EnumInfos:         file_slav_proto_enumTypes,
		MessageInfos:      file_slav_proto_msgTypes,
	}.Build()
	File_slav_proto = out.File
	file_slav_proto_rawDesc = nil
	file_slav_proto_goTypes = nil
	file_slav_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SlavClient is the client API for Slav service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SlavClient interface {
	CreateContainer(ctx context.Context, in *CreateContainerRequest, opts ...grpc.CallOption) (*CreateContainerReply, error)
	UpdateContainer(ctx context.Context, in *UpdateContainerRequest, opts ...grpc.CallOption) (*UpdateContainerReply, error)
	GetContainer(ctx context.Context, in *GetContainerRequest, opts ...grpc.CallOption) (*GetContainerReply, error)
	DeleteContainer(ctx context.Context, in *DeleteContainerRequest, opts ...grpc.CallOption) (*DeleteContainerReply, error)
	ListContainers(ctx context.Context, in *ListContainersRequest, opts ...grpc.CallOption) (*ListContainersReply, error)
}

type slavClient struct {
	cc grpc.ClientConnInterface
}

func NewSlavClient(cc grpc.ClientConnInterface) SlavClient {
	return &slavClient{cc}
}

func (c *slavClient) CreateContainer(ctx context.Context, in *CreateContainerRequest, opts ...grpc.CallOption) (*CreateContainerReply, error) {
	out := new(CreateContainerReply)
	err := c.cc.Invoke(ctx, "/slav.Slav/CreateContainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *slavClient) UpdateContainer(ctx context.Context, in *UpdateContainerRequest, opts ...grpc.CallOption) (*UpdateContainerReply, error) {
	out := new(UpdateContainerReply)
	err := c.cc.Invoke(ctx, "/slav.Slav/UpdateContainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *slavClient) GetContainer(ctx context.Context, in *GetContainerRequest, opts ...grpc.CallOption) (*GetContainerReply, error) {
	out := new(GetContainerReply)
	err := c.cc.Invoke(ctx, "/slav.Slav/GetContainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *slavClient) DeleteContainer(ctx context.Context, in *DeleteContainerRequest, opts ...grpc.CallOption) (*DeleteContainerReply, error) {
	out := new(DeleteContainerReply)
	err := c.cc.Invoke(ctx, "/slav.Slav/DeleteContainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *slavClient) ListContainers(ctx context.Context, in *ListContainersRequest, opts ...grpc.CallOption) (*ListContainersReply, error) {
	out := new(ListContainersReply)
	err := c.cc.Invoke(ctx, "/slav.Slav/ListContainers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SlavServer is the server API for Slav service.
type SlavServer interface {
	CreateContainer(context.Context, *CreateContainerRequest) (*CreateContainerReply, error)
	UpdateContainer(context.Context, *UpdateContainerRequest) (*UpdateContainerReply, error)
	GetContainer(context.Context, *GetContainerRequest) (*GetContainerReply, error)
	DeleteContainer(context.Context, *DeleteContainerRequest) (*DeleteContainerReply, error)
	ListContainers(context.Context, *ListContainersRequest) (*ListContainersReply, error)
}

// UnimplementedSlavServer can be embedded to have forward compatible implementations.
type UnimplementedSlavServer struct {
}

func (*UnimplementedSlavServer) CreateContainer(context.Context, *CreateContainerRequest) (*CreateContainerReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateContainer not implemented")
}
func (*UnimplementedSlavServer) UpdateContainer(context.Context, *UpdateContainerRequest) (*UpdateContainerReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateContainer not implemented")
}
func (*UnimplementedSlavServer) GetContainer(context.Context, *GetContainerRequest) (*GetContainerReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetContainer not implemented")
}
func (*UnimplementedSlavServer) DeleteContainer(context.Context, *DeleteContainerRequest) (*DeleteContainerReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteContainer not implemented")
}
func (*UnimplementedSlavServer) ListContainers(context.Context, *ListContainersRequest) (*ListContainersReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListContainers not implemented")
}

func RegisterSlavServer(s *grpc.Server, srv SlavServer) {
	s.RegisterService(&_Slav_serviceDesc, srv)
}

func _Slav_CreateContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateContainerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SlavServer).CreateContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/slav.Slav/CreateContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SlavServer).CreateContainer(ctx, req.(*CreateContainerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Slav_UpdateContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateContainerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SlavServer).UpdateContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/slav.Slav/UpdateContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SlavServer).UpdateContainer(ctx, req.(*UpdateContainerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Slav_GetContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetContainerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SlavServer).GetContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/slav.Slav/GetContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SlavServer).GetContainer(ctx, req.(*GetContainerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Slav_DeleteContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteContainerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SlavServer).DeleteContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/slav.Slav/DeleteContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SlavServer).DeleteContainer(ctx, req.(*DeleteContainerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Slav_ListContainers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListContainersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SlavServer).ListContainers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/slav.Slav/ListContainers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SlavServer).ListContainers(ctx, req.(*ListContainersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Slav_serviceDesc = grpc.ServiceDesc{
	ServiceName: "slav.Slav",
	HandlerType: (*SlavServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateContainer",
			Handler:    _Slav_CreateContainer_Handler,
		},
		{
			MethodName: "UpdateContainer",
			Handler:    _Slav_UpdateContainer_Handler,
		},
		{
			MethodName: "GetContainer",
			Handler:    _Slav_GetContainer_Handler,
		},
		{
			MethodName: "DeleteContainer",
			Handler:    _Slav_DeleteContainer_Handler,
		},
		{
			MethodName: "ListContainers",
			Handler:    _Slav_ListContainers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "slav.proto",
}
